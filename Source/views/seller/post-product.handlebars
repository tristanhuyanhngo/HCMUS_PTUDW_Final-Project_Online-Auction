<div class="py-12 overflow-auto">
    <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
        <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
            <div class="p-6 bg-white border-b border-gray-200">
                <form id="formUploadProduct" method="post"  name="formUploadProduct" enctype="multipart/form-data">
                    <div class="mb-4">
                        <label class="text-xl text-gray-600">Title <span class="text-red-500">*</span></label></br>
                        <input type="text" class="border border-gray-300 p-2 w-full" name="title" id="title" value="" required>
                    </div>

                    <div class="mb-4">
                        <label class="text-xl text-cyan-700">Category parent<span class="text-red-500">*</span></label></br>
                        <select class="form-select block mt-1 w-full p-2 border border-gray-500" name="parent_category" id="parent_category" onChange="update()">
                            <option value="Empty"></option>
                            <option value="Accessories">Accessories</option>
                            <option value="Electronics">Electronics</option>
                            <option value="Fashion">Fashion</option>
                        </select>
                    </div>

                    <div class="mb-4">
                        <label class="text-xl text-cyan-700">Category child <span class="text-red-500">*</span></label></br>
                        <select class="form-select block mt-1 w-full p-2 border border-gray-500" name="child_category" id="child_category" >
                        </select>
                    </div>

                    <div class="mb-4">
                        <article aria-label="File Upload Modal" class="relative h-full flex flex-col "
                            ondrop="dropHandler(event);" ondragover="dragOverHandler(event);"
                            ondragleave="dragLeaveHandler(event);" ondragenter="dragEnterHandler(event);">


                            <!-- scroll area -->
                            <section class="h-full overflow-auto p-8 w-full h-full flex flex-col">
                                <header
                                    class="border-dashed border-2 border-gray-400 py-12 flex flex-col justify-center items-center">
                                    <p class="mb-3 font-semibold text-gray-900 flex flex-wrap justify-center text-red-500">
                                        <span>You must upload at least <strong>3 images</strong> and less than <strong>10 images</strong></span>
                                    </p>
                                    <p class="mb-3 font-semibold text-gray-900 flex flex-wrap justify-center">
                                        <span>Drag and drop your</span>&nbsp;<span>files anywhere or</span>
                                    </p>
                                    <input id="hidden-input" name="img" type="file" multiple class="hidden" />
                                    <div id="button"
                                        class="cursor-pointer mt-2 rounded-sm px-3 py-1 bg-gray-200 hover:bg-gray-300 focus:shadow-outline focus:outline-none">
                                        Upload a file
                                    </div>
                                </header>

                                <h1 class="pt-8 pb-3 font-semibold sm:text-lg text-gray-900">
                                    To Upload
                                </h1>

                                <ul id="gallery" class="flex flex-1 flex-wrap -m-1">
                                    <li id="empty"
                                        class="h-full w-full text-center flex flex-col items-center justify-center items-center">
                                        <img class="mx-auto w-32"
                                            src="https://user-images.githubusercontent.com/507615/54591670-ac0a0180-4a65-11e9-846c-e55ffce0fe7b.png"
                                            alt="no data" />
                                        <span class="text-small text-gray-500">No files selected</span>
                                    </li>
                                </ul>
                            </section>
                        </article>

                        <template id="image-template">
                            <li class="block p-1 w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 xl:w-1/8 h-24">
                                <article tabindex="0"
                                    class="group hasImage w-full h-full rounded-md focus:outline-none focus:shadow-outline bg-gray-100 cursor-pointer relative text-transparent hover:text-white shadow-sm">
                                    <img alt="upload preview"
                                        class="img-preview w-full h-full sticky object-cover rounded-md bg-fixed" />

                                    <section
                                        class="flex flex-col rounded-md text-xs break-words w-full h-full z-20 absolute top-0 py-2 px-3">
                                        <h1 class="flex-1"></h1>
                                        <div class="flex">
                                            <span class="p-1">
                                                <i>
                                                    <svg class="fill-current w-4 h-4 ml-auto pt-"
                                                        xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                                        viewBox="0 0 24 24">
                                                        <path
                                                            d="M5 8.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5c0 .829-.672 1.5-1.5 1.5s-1.5-.671-1.5-1.5zm9 .5l-2.519 4-2.481-1.96-4 5.96h14l-5-8zm8-4v14h-20v-14h20zm2-2h-24v18h24v-18z" />
                                                    </svg>
                                                </i>
                                            </span>

                                            <p class="p-1 size text-xs"></p>
                                            <button
                                                class="delete ml-auto focus:outline-none hover:bg-gray-300 p-1 rounded-md">
                                                <svg class="pointer-events-none fill-current w-4 h-4 ml-auto"
                                                    xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                                    viewBox="0 0 24 24">
                                                    <path class="pointer-events-none"
                                                        d="M3 6l3 18h12l3-18h-18zm19-4v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.316c0 .901.73 2 1.631 2h5.711z" />
                                                </svg>
                                            </button>
                                        </div>
                                    </section>
                                </article>
                            </li>
                        </template>

                    </div>

                    <div class="mb-4">
                        <label class="text-xl text-gray-600">Start Price <span
                                class="text-red-500">*</span></label></br>
                        <input type="text" class="border border-gray-300 p-2 w-full" name="startPrice" id="startPrice" required>
                    </div>

                    <div class="mb-4">
                        <label class="text-xl text-gray-600">Step Price <span class="text-red-500">*</span></label></br>
                        <input type="text" class="border border-gray-300 p-2 w-full" name="stepPrice" id="stepPrice" required>
                    </div>

                    <div class="mb-4">
                        <label class="text-xl text-gray-600">Sell Price <span class="text-red-500">*</span></label></br>
                        <input type="text" class="border border-gray-300 p-2 w-full" name="sellPrice" id="sellPrice" required>
                    </div>

                    <div class="mb-8">
                        <label class="text-xl text-gray-600">Content <span class="text-red-500">*</span></label></br>
                        <textarea name="content" id="content" class="border border-gray-300 w-full"></textarea>
                    </div>

                    <div class="flex justify-center">
                        <button
                                class="px-6 py-1 bg-white text-black border border-cyan-700 hover:bg-gray-300 shadow" id="submit">Submit</button>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.ckeditor.com/4.16.0/standard/ckeditor.js"></script>

<script>
    CKEDITOR.replace('content');
</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
    function update() {
        const child_category = {
          Empty: [],
          Accessories: ['Ring', 'Watch'],
          Electronics: ['Laptop', 'Mobile', 'Smart Watch'],
          Fashion: ['Clothing', 'Shoes']
        };
        const select = document.getElementById('parent_category');
        const option = select.options[select.selectedIndex].value;

        $("#child_category").empty();

        let selectOption = "";
        const list_option = child_category[option];
        for (let i = 0; i < list_option.length; i++) {
            selectOption = "";
            selectOption += "<option value='" + list_option[i] + "'>" + list_option[i] + "</option>";
            $('#child_category').append(selectOption);
        }
    }
    update();
</script>

<script>
    const fileTempl = document.getElementById("file-template"),
        imageTempl = document.getElementById("image-template"),
        empty = document.getElementById("empty");

    // use to store pre selected files
    let FILES = {};

    // check if file is of type image and prepend the initialied
    // template to the target element
    function addFile(target, file) {
        const isImage = file.type.match("image.*"),
            objectURL = URL.createObjectURL(file);

        const clone = isImage
            ? imageTempl.content.cloneNode(true)
            : fileTempl.content.cloneNode(true);

        clone.querySelector("h1").textContent = file.name;
        clone.querySelector("li").id = objectURL;
        clone.querySelector(".delete").dataset.target = objectURL;
        clone.querySelector(".size").textContent =
            file.size > 1024
                ? file.size > 1048576
                    ? Math.round(file.size / 1048576) + "mb"
                    : Math.round(file.size / 1024) + "kb"
                : file.size + "b";

        isImage &&
            Object.assign(clone.querySelector("img"), {
                src: objectURL,
                alt: file.name
            });

        empty.classList.add("hidden");
        target.prepend(clone);

        FILES[objectURL] = file;
    }

    const gallery = document.getElementById("gallery"),
        overlay = document.getElementById("overlay");

    // click the hidden input of type file if the visible button is clicked
    // and capture the selected files
    const hidden = document.getElementById("hidden-input");
    document.getElementById("button").onclick = () => hidden.click();
    hidden.onchange = (e) => {
        for (const file of e.target.files) {
            addFile(gallery, file);
            console.log(gallery.children.length);
        }
    };

    // use to check if a file is being dragged
    const hasFiles = ({ dataTransfer: { types = [] } }) =>
        types.indexOf("Files") > -1;

    // use to drag dragenter and dragleave events.
    // this is to know if the outermost parent is dragged over
    // without issues due to drag events on its children
    let counter = 0;

    // reset counter and append file to gallery when file is dropped
    function dropHandler(ev) {
        ev.preventDefault();
        for (const file of ev.dataTransfer.files) {
            addFile(gallery, file);
            overlay.classList.remove("draggedover");
            counter = 0;
        }
    }

    // only react to actual files being dragged
    function dragEnterHandler(e) {
        e.preventDefault();
        if (!hasFiles(e)) {
            return;
        }
        ++counter && overlay.classList.add("draggedover");
    }

    function dragLeaveHandler(e) {
        1 > --counter && overlay.classList.remove("draggedover");
    }

    function dragOverHandler(e) {
        if (hasFiles(e)) {
            e.preventDefault();
        }
    }

    // event delegation to caputre delete events
    // fron the waste buckets in the file preview cards
    gallery.onclick = ({ target }) => {
        if (target.classList.contains("delete")) {
            const ou = target.dataset.target;
            document.getElementById(ou).remove(ou);
            gallery.children.length === 1 && empty.classList.remove("hidden");
            delete FILES[ou];
        }
    };

    //print all selected files
    // document.getElementById("submit").onclick = () => {
    //     console.log(FILES);
    // };

    //clear entire selection
    // document.getElementById("cancel").onclick = () => {
    //     while (gallery.children.length > 0) {
    //         gallery.lastChild.remove();
    //     }
    //     FILES = {};
    //     empty.classList.remove("hidden");
    //     gallery.append(empty);
    // };
</script>

<script>

</script>

<style>
    .hasImage:hover section {
        background-color: rgba(5, 5, 5, 0.4);
    }

    .hasImage:hover button:hover {
        background: rgba(5, 5, 5, 0.45);
    }

    /*#overlay p,*/
    /*i {*/
    /*    opacity: 0;*/
    /*}*/

    #overlay.draggedover {
        background-color: rgba(255, 255, 255, 0.7);
    }

    #overlay.draggedover p,
    #overlay.draggedover i {
        opacity: 1;
    }

    .group:hover .group-hover\:text-blue-800 {
        color: #2b6cb0;
    }
</style>